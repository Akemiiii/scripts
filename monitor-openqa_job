#!/bin/sh -ex

# Monitor an openQA job by polling the status of a job over the API.
#
# Continuously polls the openQA API for the status of the specified job until
# the job finishes. After the job is finished this program exits with an exit
# code corresponding to the job result. For example a passing job would exit
# this program with exit code 0 for success, all other with 1.

# configuration variables with defaults.
sleep_time="${sleep_time:-"10"}"
openqa_client="${openqa_client:-"/usr/share/openqa/script/client"}"
host="${host:-"https://openqa.opensuse.org"}"
openqa_groupid="${openqa_groupid:-"24"}"
obs_component="${obs_component:-"package"}"

. $(dirname $0)/_common

[ -f job_post_response ] || (echo "Need job response status file 'job_post_response'" && exit 2)
JOB_ID=$(filter_id job_post_response)
echo "waiting for job ${JOB_ID} to finish"
while sleep ${sleep_time} ; do
    $openqa_client --host ${host} jobs/${JOB_ID} | grep -q 'state.*done' && break
done
response=$($openqa_client --host ${host} jobs/${JOB_ID})
result=$(echo $response | sed -n 's/^.*result\s*=> "\([^"]*\)",.*/\1/p')
echo "job result: $result"
obs_package_name=$1
if [ -z "$(echo $result | grep "passed")" -a -n "$obs_package_name" ] ; then

    VERSION=$($openqa_client --host ${host} jobs/${JOB_ID} | sed -n 's/^.*VERSION\s*=> "\([^"]*\)",.*/\1/p')
    osc api /comments/${obs_component}/$obs_package_name | grep id= | sed -n 's/.*id="\([^"]*\)">test failed.*/\1/p' | while read id; do osc api -X DELETE /comment/$id; done
    osc api --data="test failed, see https://openqa.opensuse.org/tests/overview?version=$VERSION&groupid=${openqa_groupid}" -X POST "/comments/${obs_component}/$obs_package_name"
  exit 1
fi
