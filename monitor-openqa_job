#!/bin/bash -ex

# Monitor an openQA job by polling the status of a job over the API.
#
# Continuously polls the openQA API for the status of the specified jobs until
# all jobs finish. After the jobs have finished this program exits with an exit
# code corresponding to the jobs' result. For example all jobs pass it would exit
# this program with exit code 0 for success; otherwise with 1.

set -euo pipefail

# configuration variables with defaults.
sleep_time="${sleep_time:-"10"}"
openqa_cli="${openqa_cli:-"openqa-cli"}"
host="${host:-"https://openqa.opensuse.org"}"
openqa_groupid="${openqa_groupid:-"24"}"
obs_component="${obs_component:-"package"}"

# shellcheck source=/dev/null
. "$(dirname "$0")"/_common

[[ -f job_post_response ]] || (echo "Need job response status file 'job_post_response'" && exit 2)
failures=0
for job_id in $(job_ids job_post_response); do
    echo "Waiting for job $job_id to finish"
    while sleep "${sleep_time}" ; do
        job_state=$($openqa_cli api --host "$host" jobs/"$job_id" | jq -r '.job.state')
        [[ $job_state = 'done' ]] && break
    done
    response=$($openqa_cli api jobs/"$job_id")
    result=$(echo "$response" | jq -r '.job.result')
    echo "Result of job $job_id: $result"
    obs_package_name=$1
    if [[ $result != 'passed' ]] && [[ -n $obs_package_name ]] ; then
        VERSION=$(echo "$response" | jq -r '.job.settings.VERSION')
        osc api /comments/"${obs_component}"/"$obs_package_name" | grep id= | sed -n 's/.*id="\([^"]*\)">test failed.*/\1/p' | while read -r id; do osc api -X DELETE /comment/"$id"; done
        osc api --data="test failed, see https://openqa.opensuse.org/tests/overview?version=$VERSION&groupid=${openqa_groupid}" -X POST "/comments/${obs_component}/$obs_package_name"
        failures=$((failures + 1))
    fi
done

[[ $failures -gt 0 ]] && exit 1
